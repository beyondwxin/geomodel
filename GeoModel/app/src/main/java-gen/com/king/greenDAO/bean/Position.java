package com.king.greenDAO.bean;

import com.king.geomodel.view.pojo.PositionEntity;
import com.king.greenDAO.dao.DaoSession;
import com.king.greenDAO.dao.GeoModelDao;
import com.king.greenDAO.dao.PositionDao;

import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 

/**
 * Entity mapped to table "POSITION".
 */
public class Position implements java.io.Serializable {

    private Long id;
    private Double longitude;
    private Double latitude;
    private String address;
    private String country;
    private String province;
    private String city;
    private String district;
    private String street;
    private String time;
    private Long modelId;

    /**
     * Used to resolve relations
     */
    private transient DaoSession daoSession;

    /**
     * Used for active entity operations.
     */
    private transient PositionDao myDao;

    private GeoModel geoModel;
    private Long geoModel__resolvedKey;
    private PositionEntity positionEntity;

    public Position() {
    }

    public Position(Long id) {
        this.id = id;
    }

    public Position(Long id, Double longitude, Double latitude, String address, String country, String province, String city, String district, String street, String time, Long modelId) {
        this.id = id;
        this.longitude = longitude;
        this.latitude = latitude;
        this.address = address;
        this.country = country;
        this.province = province;
        this.city = city;
        this.district = district;
        this.street = street;
        this.time = time;
        this.modelId = modelId;
    }

    public Position(Long id, Double longitude, Double latitude, String address, String time,Long modelId) {
        this.id = id;
        this.longitude = longitude;
        this.latitude = latitude;
        this.address = address;
        this.time = time;
        this.modelId=modelId;
    }

    /**
     * called by internal mechanisms, do not call yourself.
     */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getPositionDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Double getLongitude() {
        return longitude;
    }

    public void setLongitude(Double longitude) {
        this.longitude = longitude;
    }

    public Double getLatitude() {
        return latitude;
    }

    public void setLatitude(Double latitude) {
        this.latitude = latitude;
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public String getCountry() {
        return country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    public String getProvince() {
        return province;
    }

    public void setProvince(String province) {
        this.province = province;
    }

    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public String getDistrict() {
        return district;
    }

    public void setDistrict(String district) {
        this.district = district;
    }

    public String getStreet() {
        return street;
    }

    public void setStreet(String street) {
        this.street = street;
    }

    public String getTime() {
        return time;
    }

    public void setTime(String time) {
        this.time = time;
    }

    public Long getModelId() {
        return modelId;
    }

    public void setModelId(Long modelId) {
        this.modelId = modelId;
    }

    /**
     * To-one relationship, resolved on first access.
     */
    public GeoModel getGeoModel() {
        Long __key = this.modelId;
        if (geoModel__resolvedKey == null || !geoModel__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            GeoModelDao targetDao = daoSession.getGeoModelDao();
            GeoModel geoModelNew = targetDao.load(__key);
            synchronized (this) {
                geoModel = geoModelNew;
                geoModel__resolvedKey = __key;
            }
        }
        return geoModel;
    }

    public void setGeoModel(GeoModel geoModel) {
        synchronized (this) {
            this.geoModel = geoModel;
            modelId = geoModel == null ? null : geoModel.getId();
            geoModel__resolvedKey = modelId;
        }
    }

    /**
     * Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context.
     */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
        myDao.delete(this);
    }

    /**
     * Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context.
     */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
        myDao.update(this);
    }

    /**
     * Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context.
     */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
        myDao.refresh(this);
    }

}
